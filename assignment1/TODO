
- General efficiency

- Question 1a == DONE
- Remove trapezoid, implement better Romberg == DONE, see also: some_open_integrals.ipynb
- Fix interpolation, implement some quadratic method? (See tutorial 1) 
  --> A quadratic method will perform better in only the last 3 points. 
  But it will depend very much on b and c as well. But it performs OK for large b, and 
  for small b it is very good. Thus we implement Nevilles Algorithm for last 3 points
  
--> Can also make it more intuitive (same results) by just calling the interpolator with log x and log y values
--> and then exp ( the y interpolated values ) to get the actual y values for plotting
--> exp the x values as well.

- Implement Ridders method better == DECIDED THAT ITS FINE
- Look at rejection sampling
- Implement Histogram binning == DONE, assume plt.hist can be used without density argument
- Implement Quicksort ? (low priority)
- Implement np.argsort for downhill_simplexND (high priority) == DONE, used selection argsort
- Check if functions work for c = 3.9
- Min finding, watch out for local minima? (Restart function if time available perhaps)






======================== KLAD ====================

# Not calculating sum log (xi) up front:

Mass file m14
Best guess for a,b,c after 204 iterations: [1.87424315 0.64146561 2.7       ]
Took 2.655181884765625 seconds

----

# Calculating sum log (xi) up front:

Mass file m14
Best guess for a,b,c after 204 iterations: [1.87424315 0.64146561 2.7       ]
Took 1.7661831378936768 seconds

----

Mass file m11
Best guess for a,b,c after 204 iterations: [1.6        0.86227436 2.1       ]
Took 138.8812301158905 seconds
(Initial a,b,c is 1.113288, 1.25296, 1.7885)

----

Mass file m11
Best guess for a,b,c after 204 iterations: [1.6        0.86224971 2.1       ]
Took 88.61901807785034 seconds
(Initial a,b,c is 1.2, 1.2, 1.8)

----

All results:


Mass file m11
Best guess for a,b,c after 364 iterations: [1.6        0.86227436 2.1       ]
Mass file m12
Best guess for a,b,c after 291 iterations: [1.7        0.85639411 3.        ]
Mass file m13
Best guess for a,b,c after 225 iterations: [1.7        0.66474371 2.2       ]
Mass file m14
Best guess for a,b,c after 204 iterations: [1.87424315 0.64146561 2.7       ]
Mass file m15
Best guess for a,b,c after 242 iterations: [1.9        0.75697323 2.2       ]


----

All results with new best guess [1.5, 0.7, 2.5]

Mass file m11
Best guess for a,b,c after 213 iterations: [1.46863861 0.97320192 2.5       ]
Mass file m12
Best guess for a,b,c after 158 iterations: [1.83710811 0.76646465 2.5       ]
Mass file m13
Best guess for a,b,c after 270 iterations: [1.56172158 0.75474938 2.6       ]
Mass file m14
Best guess for a,b,c after 398 iterations: [2.1        0.5471996  2.20012781]
Mass file m15
Best guess for a,b,c after 245 iterations: [1.8        0.83956986 2.5       ]


All results with final best guess [1.5, 0.7, 2.7] # from eyeballing the data


Mass file m11
Best guess for a,b,c after 168 iterations: [1.46862962 0.97320158 2.5       ]
Mass file m12
Best guess for a,b,c after 290 iterations: [1.7        0.85639542 3.        ]
Mass file m13
Best guess for a,b,c after 167 iterations: [1.56172163 0.75474937 2.6       ]
Mass file m14
Best guess for a,b,c after 166 iterations: [1.87424112 0.6414661  2.7       ]
Mass file m15
Best guess for a,b,c after 271 iterations: [1.8        0.83956984 2.5       ]
Took 257.80514907836914 seconds






















